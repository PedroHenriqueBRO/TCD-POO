/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.io.InputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import repository.DbConnection;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Caio Veloso &lt;caio.veloso at ifnmg.edu.br&gt;
 */
public class TelaPrincipal extends javax.swing.JFrame {
    
  private String nameRole;
  
  private Long userid;

  //<editor-fold defaultstate="collapsed" desc="Getters/Setters">
  public Long getUserid() {
        return userid;
    }

    public void setUserid(Long userid) {
        this.userid = userid;
    }
  
//</editor-fold>
    
 
   public TelaPrincipal(){
       initComponents();
       setLocationRelativeTo(null);
   }
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal(String nameRole) {
        this.nameRole=nameRole;        
        initComponents();
        
        setTitle("Sistema ["+nameRole+"]");
        setLocationRelativeTo(null);
        if("Leitor".equals(nameRole)){
            
            mnuConsultarLivro.setVisible(false);
            itmCadastrarNovoLivro.setVisible(false);
            itmCadastrarNovoUsuario.setVisible(false);
            mnu1Administrador.setVisible(false);
            itmEmprestimo.setVisible(false);
            
            
        }
        if("Bibliotecario".equals(nameRole)){
            
            itmCadastrarNovoUsuario.setVisible(false);
            mnu1Administrador.setVisible(false);
            itmAutorizarEmprestimos.setVisible(false);
            itmHistoricoEmprestimos.setVisible(false);
            
        }
                    
    }

    public String getNameRole() {
        return nameRole;
    }

    public void setNameRole(String nameRole) {
        this.nameRole = nameRole;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnu1Administrador = new javax.swing.JMenu();
        itmCadastrarNovoUsuario = new javax.swing.JMenuItem();
        mnuConsultarUsuarios = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jGerenciar = new javax.swing.JMenuItem();
        mnuConsultar = new javax.swing.JMenu();
        itmCadastrarNovoLivro = new javax.swing.JMenuItem();
        itmEmprestimo = new javax.swing.JMenuItem();
        itmAutorizarEmprestimos = new javax.swing.JMenuItem();
        itmHistoricoEmprestimos = new javax.swing.JMenuItem();
        mnuConsultarLivro = new javax.swing.JMenuItem();
        mnuAjuda = new javax.swing.JMenu();
        itmSobre = new javax.swing.JMenuItem();
        mnuRelatório = new javax.swing.JMenu();
        itmLivros = new javax.swing.JMenuItem();
        itmEmprestimos = new javax.swing.JMenuItem();
        itmCredencias = new javax.swing.JMenuItem();
        itmBibliotecarios = new javax.swing.JMenuItem();
        itmLeitores = new javax.swing.JMenuItem();
        Roles = new javax.swing.JMenuItem();
        itmUsuarios = new javax.swing.JMenuItem();
        itmEmprestimosAutorizados = new javax.swing.JMenuItem();
        itmUsuariosLogados = new javax.swing.JMenuItem();
        mnuSair = new javax.swing.JMenu();
        itmFecharPrograma = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );

        mnu1Administrador.setText("Administrador");

        itmCadastrarNovoUsuario.setText("Cadastrar novo usuário");
        itmCadastrarNovoUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmCadastrarNovoUsuarioMouseReleased(evt);
            }
        });
        mnu1Administrador.add(itmCadastrarNovoUsuario);

        mnuConsultarUsuarios.setText("Consultar Usuários");
        mnuConsultarUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuConsultarUsuariosMouseReleased(evt);
            }
        });
        mnu1Administrador.add(mnuConsultarUsuarios);

        jMenuBar1.add(mnu1Administrador);

        jMenu1.setText("Perfil");

        jGerenciar.setText("Gerenciar");
        jGerenciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jGerenciarMouseReleased(evt);
            }
        });
        jMenu1.add(jGerenciar);

        jMenuBar1.add(jMenu1);

        mnuConsultar.setText("Livros");
        mnuConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuConsultarMouseReleased(evt);
            }
        });

        itmCadastrarNovoLivro.setText("Cadastrar novo livro");
        itmCadastrarNovoLivro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmCadastrarNovoLivroMouseReleased(evt);
            }
        });
        mnuConsultar.add(itmCadastrarNovoLivro);

        itmEmprestimo.setText("Realizar novo empréstimo");
        itmEmprestimo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmEmprestimoMouseReleased(evt);
            }
        });
        mnuConsultar.add(itmEmprestimo);

        itmAutorizarEmprestimos.setText("Autorizar empréstimo");
        itmAutorizarEmprestimos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmAutorizarEmprestimosMouseReleased(evt);
            }
        });
        itmAutorizarEmprestimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAutorizarEmprestimosActionPerformed(evt);
            }
        });
        mnuConsultar.add(itmAutorizarEmprestimos);

        itmHistoricoEmprestimos.setText("Histórico de Emprestimos");
        itmHistoricoEmprestimos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmHistoricoEmprestimosMouseReleased(evt);
            }
        });
        mnuConsultar.add(itmHistoricoEmprestimos);

        mnuConsultarLivro.setText("Consultar livros");
        mnuConsultarLivro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuConsultarLivroMouseReleased(evt);
            }
        });
        mnuConsultar.add(mnuConsultarLivro);

        jMenuBar1.add(mnuConsultar);

        mnuAjuda.setText("Ajuda");

        itmSobre.setText("Sobre");
        itmSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmSobreMouseReleased(evt);
            }
        });
        mnuAjuda.add(itmSobre);

        jMenuBar1.add(mnuAjuda);

        mnuRelatório.setText("Relatório");

        itmLivros.setText("Livros");
        itmLivros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmLivrosMouseReleased(evt);
            }
        });
        itmLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmLivrosActionPerformed(evt);
            }
        });
        mnuRelatório.add(itmLivros);

        itmEmprestimos.setText("Emprestimos");
        itmEmprestimos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmEmprestimosMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmEmprestimos);

        itmCredencias.setText("Credenciais");
        itmCredencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmCredenciasMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmCredencias);

        itmBibliotecarios.setText("Bibliotecarios");
        itmBibliotecarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmBibliotecariosMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmBibliotecarios);

        itmLeitores.setText("Leitores");
        itmLeitores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmLeitoresMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmLeitores);

        Roles.setText("Roles");
        Roles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RolesMouseReleased(evt);
            }
        });
        mnuRelatório.add(Roles);

        itmUsuarios.setText("Usuarios");
        itmUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmUsuariosMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmUsuarios);

        itmEmprestimosAutorizados.setText("Emprestimos autorizados");
        itmEmprestimosAutorizados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmEmprestimosAutorizadosMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmEmprestimosAutorizados);

        itmUsuariosLogados.setText("Usuarios Logados");
        itmUsuariosLogados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmUsuariosLogadosMouseReleased(evt);
            }
        });
        mnuRelatório.add(itmUsuariosLogados);

        jMenuBar1.add(mnuRelatório);

        mnuSair.setText("Sair");

        itmFecharPrograma.setText("Fechar");
        itmFecharPrograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itmFecharProgramaMouseReleased(evt);
            }
        });
        mnuSair.add(itmFecharPrograma);

        jMenuBar1.add(mnuSair);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmAutorizarEmprestimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAutorizarEmprestimosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itmAutorizarEmprestimosActionPerformed

    private void itmFecharProgramaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmFecharProgramaMouseReleased
        // TODO add your handling code here:
         dispose();
        TelaAutenticacao newTela = new TelaAutenticacao();
        newTela.setVisible(true);
    }//GEN-LAST:event_itmFecharProgramaMouseReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
         dispose();
        TelaAutenticacao newTela = new TelaAutenticacao();
        newTela.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void itmSobreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmSobreMouseReleased
        // TODO add your handling code here:
        dispose();
        TelaSobre newSobre = new TelaSobre(nameRole);
        newSobre.setVisible(true);
        
    }//GEN-LAST:event_itmSobreMouseReleased

    private void itmCadastrarNovoUsuarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmCadastrarNovoUsuarioMouseReleased
        // TODO add your handling code here:
        
        dispose();
        TelaCadastroUsuario newCadastro = new TelaCadastroUsuario(nameRole,userid);
        newCadastro.setVisible(true);
        
    }//GEN-LAST:event_itmCadastrarNovoUsuarioMouseReleased

    private void itmCadastrarNovoLivroMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmCadastrarNovoLivroMouseReleased
        // TODO add your handling code here:
        
        
        dispose();
        TelaCadastrarLivro newLivro = new TelaCadastrarLivro(nameRole,userid);
        newLivro.setVisible(true);
        
        
    }//GEN-LAST:event_itmCadastrarNovoLivroMouseReleased

    private void itmEmprestimoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmEmprestimoMouseReleased
        // TODO add your handling code here:
        dispose();
        TelaRealizarNovoEmprestimo newEmprestimo = new TelaRealizarNovoEmprestimo(nameRole,userid);
        newEmprestimo.setVisible(true);
    }//GEN-LAST:event_itmEmprestimoMouseReleased

    private void itmAutorizarEmprestimosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmAutorizarEmprestimosMouseReleased
        // TODO add your handling code here:
        dispose();
        TelaAutorizarEmprestimo newAutorizar = new TelaAutorizarEmprestimo(nameRole,userid);
        newAutorizar.setVisible(true);
        
    }//GEN-LAST:event_itmAutorizarEmprestimosMouseReleased

    private void itmHistoricoEmprestimosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmHistoricoEmprestimosMouseReleased
         // TODO add your handling code here:
         dispose();
         TelaHistoricoEmprestimos newHistorico = new TelaHistoricoEmprestimos(nameRole,userid);
         newHistorico.setVisible(true);
    }//GEN-LAST:event_itmHistoricoEmprestimosMouseReleased

    private void mnuConsultarUsuariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuConsultarUsuariosMouseReleased
        // TODO add your handling code here:
        dispose();
        TelaControle newTela = new TelaControle(nameRole,userid);
        newTela.setVisible(true);
        
        
    }//GEN-LAST:event_mnuConsultarUsuariosMouseReleased

    private void mnuConsultarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuConsultarMouseReleased
        // TODO add your handling code here:
       
        dispose();
        
    }//GEN-LAST:event_mnuConsultarMouseReleased

    private void mnuConsultarLivroMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuConsultarLivroMouseReleased
        // TODO add your handling code here:
         dispose();
        TelaControleLivro newtela=new TelaControleLivro(nameRole,userid);
        newtela.setVisible(true);
    }//GEN-LAST:event_mnuConsultarLivroMouseReleased

    private void jGerenciarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGerenciarMouseReleased
        // TODO add your handling code here:
        dispose();
        GerenciamentoCredencial newtela=new GerenciamentoCredencial(nameRole,userid);
        newtela.setVisible(true);
    }//GEN-LAST:event_jGerenciarMouseReleased

    private void itmLivrosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmLivrosMouseReleased
        // TODO add your handling code here:
      String title = "Listagem de Leitores";

        try (InputStream in = getClass().getResourceAsStream("/LivrosListagem.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_itmLivrosMouseReleased

    private void itmLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmLivrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itmLivrosActionPerformed

    private void itmEmprestimosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmEmprestimosMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Emprestimos";

        try (InputStream in = getClass().getResourceAsStream("/ListagemEmprestimo.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmEmprestimosMouseReleased

    private void itmCredenciasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmCredenciasMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Credenciais";

        try (InputStream in = getClass().getResourceAsStream("/ListagemCredential.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmCredenciasMouseReleased

    private void itmBibliotecariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmBibliotecariosMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Bibliotecarios";

        try (InputStream in = getClass().getResourceAsStream("/ListagemBibliotecario.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmBibliotecariosMouseReleased

    private void itmLeitoresMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmLeitoresMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Leitores";

        try (InputStream in = getClass().getResourceAsStream("/ListagemLeitores.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmLeitoresMouseReleased

    private void RolesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RolesMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Roles";

        try (InputStream in = getClass().getResourceAsStream("/ListagemRole.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RolesMouseReleased

    private void itmUsuariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmUsuariosMouseReleased
        // TODO add your handling code here:
        String title = "Listagem de Usuarios";

        try (InputStream in = getClass().getResourceAsStream("/ListagemUser.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmUsuariosMouseReleased

    private void itmEmprestimosAutorizadosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmEmprestimosAutorizadosMouseReleased
        // TODO add your handling code here:
         String title = "Listagem de emprestimos AUTORIZADOS";

        try (InputStream in = getClass().getResourceAsStream("/EmprestimoAutorizado.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmEmprestimosAutorizadosMouseReleased

    private void itmUsuariosLogadosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmUsuariosLogadosMouseReleased
        // TODO add your handling code here:
         String title = "Listagem de Usuarios que já Logaram";

        try (InputStream in = getClass().getResourceAsStream("/UsuariosLogados.jasper")) {
            JasperPrint jasperPrint = JasperFillManager.fillReport(in, null, DbConnection.getConnection());

            JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);

            JDialog dialog = new JDialog(this);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);

            // Centralizar o JDialog em relação à tela
            dialog.setLocationRelativeTo(null);

            dialog.setVisible(true);

            // Certifique-se de fechar o JDialog após a visualização do relatório (se necessário).
            // dialog.dispose();

        } catch (IOException | JRException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, "Erro ao gerar relatório", ex);
            // Exiba uma mensagem ao usuário informando sobre o erro.
            JOptionPane.showMessageDialog(this, "Erro ao gerar relatório: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itmUsuariosLogadosMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Roles;
    private javax.swing.JMenuItem itmAutorizarEmprestimos;
    private javax.swing.JMenuItem itmBibliotecarios;
    private javax.swing.JMenuItem itmCadastrarNovoLivro;
    private javax.swing.JMenuItem itmCadastrarNovoUsuario;
    private javax.swing.JMenuItem itmCredencias;
    private javax.swing.JMenuItem itmEmprestimo;
    private javax.swing.JMenuItem itmEmprestimos;
    private javax.swing.JMenuItem itmEmprestimosAutorizados;
    private javax.swing.JMenuItem itmFecharPrograma;
    private javax.swing.JMenuItem itmHistoricoEmprestimos;
    private javax.swing.JMenuItem itmLeitores;
    private javax.swing.JMenuItem itmLivros;
    private javax.swing.JMenuItem itmSobre;
    private javax.swing.JMenuItem itmUsuarios;
    private javax.swing.JMenuItem itmUsuariosLogados;
    private javax.swing.JMenuItem jGerenciar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu mnu1Administrador;
    private javax.swing.JMenu mnuAjuda;
    private javax.swing.JMenu mnuConsultar;
    private javax.swing.JMenuItem mnuConsultarLivro;
    private javax.swing.JMenuItem mnuConsultarUsuarios;
    private javax.swing.JMenu mnuRelatório;
    private javax.swing.JMenu mnuSair;
    // End of variables declaration//GEN-END:variables
}
